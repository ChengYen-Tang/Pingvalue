@model Pingvalue.Models.EditeDeviceViewModel

@{
    ViewBag.Title = "Edit";
}

<div class="container-fluid">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            @Html.ActionLink("設備管理", "Index")
        </li>
        <li class="breadcrumb-item active">@ViewContext.RouteData.Values["action"]</li>
    </ol>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit Device.</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(m => m.DeviceName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.DeviceName, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.IPAddress, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.IPAddress, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Groups", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in Model.GroupList)
                {
                    <div class="form-check form-check-inline">
                        <input type="checkbox" name="selectedGroups" value="@item.Value" checked="@item.Selected" class="form-check-input" id="@item.Value" />
                        @Html.Label(item.Text, new { @class = "form-check-label", @for = item.Value })
                    </div>
                }
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

@section css
{
    @Styles.Render("~/Content/Site")
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
